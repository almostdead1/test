name: Building Kernel

on:
 workflow_dispatch:
  inputs:
   KERNEL_SOURCE:
    description: 'Kernel Source'
    required: true
    default: 'almostdead1/Rockstarkernel_beryllium'
   KERNEL_SOURCE_BRANCH:
    description: 'Branch'
    required: true
    default: 'random'
   KERNEL_DEFCONFIG:
    description: 'Defconfig'
    required: true
    default: 'perf_defconfig'
   TARGET_ARCH:
    description: 'Target ARCH'
    required: true
    default: 'arm64'
   KERNEL_FILE:
    description: 'Your kernel out image name'
    required: true
    default: 'Image.gz-dtb'
   CLANG_URL:
    description: 'Proton-Clang URL'
    required: true
    default: 'https://github.com/kdrag0n/proton-clang/releases/download/20230904-17.0.0-1/proton-clang-bin.tar.gz'
   BUILD_EXTRA_COMMAND:
    description: 'Extra build commands(e.g. LLVM=1 LLVM_IAS=1)'
    required: false
    default: 'NM=llvm-nm OBJDUMP=llvm-objdump STRIP=llvm-strip'
   USE_KPROBES:
    description: 'Use Kprobes'
    required: false
    default: 'true'
    type: boolean
   USE_KERNELSU:
    description: 'Use KernelSU'
    required: true
    default: 'true'
    type: boolean
   SSH:
    description: 'SSH connection to Actions'
    required: false
    default: 'false'
    type: boolean

jobs:
 build:
  runs-on: ubuntu-latest

  steps:
   # Checkout the kernel source to the runner.
   - name: Checkout kernel source
    uses: actions/checkout@v3

   # Download KernelSU setup script
   - name: Download KernelSU setup script
    run: |
      curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -

fi

      - name: Download and install proton-clang
        run: |
          wget https://github.com/kdrag0n/proton-clang/releases/download/20230904-17.0.0-1/proton-clang-bin.tar.gz
          tar -xf proton-clang-bin.tar.gz
          export PATH="$HOME/toolchains/proton-clang/bin:$PATH"

      - name: Checkout the kernel source to the runner
        uses: actions/checkout@v3

      - name: Configure the kernel build
        run: |
          make O=out ARCH=arm64 defconfig

      - name: Build the kernel
        run: |
          make O=out ARCH=arm64 CC=clang -j$(nproc --all)

      - name: Upload the kernel image
        uses: actions/upload-artifact@v3
        with:
          name: kernel.img
          path: arch/arm64/boot/Image.gz-dtb
